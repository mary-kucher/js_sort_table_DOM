{"version":3,"sources":["scripts/main.js"],"names":["colomn","head","document","querySelector","table","ascending","num","str","replace","sortRows","arr","index","sort","a","b","isNaN","cells","innerText","localeCompare","reSortRows","addEventListener","ev","item","itemIndex","target","closest","cellIndex","rows","forEach","tr","append"],"mappings":";AAAA,aAiDC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA/CD,IAEIA,EAFEC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,SAEjCE,GAAY,EAkBhB,SAASC,EAAIC,GACJ,OAACA,EAAIC,QAAQ,QAAS,IAG/B,SAASC,EAASC,EAAKC,GAGdD,OAFPL,GAAY,EAELK,EAAIE,KAAK,SAACC,EAAGC,GACdC,OAAAA,MAAMT,EAAIO,EAAEG,MAAML,GAAOM,YACpBJ,EAAEG,MAAML,GAAOM,UAAUC,cAAcJ,EAAEE,MAAML,GAAOM,WAEtDX,EAAIO,EAAEG,MAAML,GAAOM,WAAaX,EAAIQ,EAAEE,MAAML,GAAOM,aAKhE,SAASE,EAAWT,EAAKC,GAGhBD,OAFPL,GAAY,EAELK,EAAIE,KAAK,SAACC,EAAGC,GACdC,OAAAA,MAAMT,EAAIO,EAAEG,MAAML,GAAOM,YACpBH,EAAEE,MAAML,GAAOM,UAAUC,cAAcL,EAAEG,MAAML,GAAOM,WAEtDX,EAAIQ,EAAEE,MAAML,GAAOM,WAAaX,EAAIO,EAAEG,MAAML,GAAOM,aAvChEhB,EAAKmB,iBAAiB,QAAS,SAACC,GACxBC,IACAC,EADOF,EAAGG,OAAOC,QAAQ,MACRC,UAEnB1B,GAAAA,IAAWuB,GAAalB,EACnBc,OAAAA,EAAef,EAAAA,EAAMuB,MAAOJ,GAAWK,QAAQ,SAAAC,GACpDzB,EAAM0B,OAAOD,KAIjBpB,EAAaL,EAAAA,EAAMuB,MAAOJ,GAAWK,QAAQ,SAAAC,GAC3CzB,EAAM0B,OAAOD,KAEf7B,EAASuB","file":"main.8f0dde23.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst head = document.querySelector('thead');\nconst table = document.querySelector('tbody');\nlet colomn;\nlet ascending = true;\n\nhead.addEventListener('click', (ev) => {\n  const item = ev.target.closest('th');\n  const itemIndex = item.cellIndex;\n\n  if (colomn === itemIndex && ascending) {\n    return reSortRows([...table.rows], itemIndex).forEach(tr => {\n      table.append(tr);\n    });\n  }\n\n  sortRows([...table.rows], itemIndex).forEach(tr => {\n    table.append(tr);\n  });\n  colomn = itemIndex;\n});\n\nfunction num(str) {\n  return +str.replace(/[,$]/g, '');\n}\n\nfunction sortRows(arr, index) {\n  ascending = true;\n\n  return arr.sort((a, b) => {\n    if (isNaN(num(a.cells[index].innerText))) {\n      return a.cells[index].innerText.localeCompare(b.cells[index].innerText);\n    } else {\n      return num(a.cells[index].innerText) - num(b.cells[index].innerText);\n    }\n  });\n}\n\nfunction reSortRows(arr, index) {\n  ascending = false;\n\n  return arr.sort((a, b) => {\n    if (isNaN(num(a.cells[index].innerText))) {\n      return b.cells[index].innerText.localeCompare(a.cells[index].innerText);\n    } else {\n      return num(b.cells[index].innerText) - num(a.cells[index].innerText);\n    }\n  });\n}\n"]}